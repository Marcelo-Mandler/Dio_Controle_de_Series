{"ast":null,"code":"var _jsxFileName = \"C:\\\\DIO\\\\Dio_Controle_de_Series\\\\front-end\\\\src\\\\components\\\\MovieList.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MovieList = () => {\n  _s();\n\n  const [movies, setMovies] = useState([]); // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  useEffect(async () => {\n    const url = \"http://localhost:5000/movies\";\n    const res = await fetch(url);\n    setMovies(await res.json());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"striped\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Nome\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Tipo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Epis\\xF3dios\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Epis\\xF3dio atual\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Visto por \\xDAltimo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: movies.map(movie => {\n        let type = movie.type === 0 ? 'Série' : 'Filme';\n        let formatDate = movie.last_view.split('T', 1);\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: movie.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: movie.total_ep\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: movie.atual_ep\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 29\n          }, this)]\n        }, movie.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 13\n  }, this);\n};\n\n_s(MovieList, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n\n_c = MovieList;\nexport default MovieList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"sources":["C:/DIO/Dio_Controle_de_Series/front-end/src/components/MovieList.jsx"],"names":["useEffect","useState","MovieList","movies","setMovies","url","res","fetch","json","map","movie","type","formatDate","last_view","split","name","total_ep","atual_ep","id"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAEpB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBH,QAAQ,CAAC,EAAD,CAApC,CAFoB,CAIpB;;AACAD,EAAAA,SAAS,CAAC,YAAY;AAClB,UAAMK,GAAG,GAAG,8BAAZ;AACA,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAACF,GAAD,CAAvB;AACAD,IAAAA,SAAS,CAAC,MAAME,GAAG,CAACE,IAAJ,EAAP,CAAT;AACH,GAJQ,EAIN,EAJM,CAAT;AAMA,sBACQ;AAAO,IAAA,SAAS,EAAC,SAAjB;AAAA,4BACI;AAAA,6BACI;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAWI;AAAA,gBACCL,MAAM,CAACM,GAAP,CAAWC,KAAK,IAAI;AACjB,YAAIC,IAAI,GAAGD,KAAK,CAACC,IAAN,KAAe,CAAf,GAAmB,OAAnB,GAA6B,OAAxC;AACA,YAAIC,UAAU,GAAIF,KAAK,CAACG,SAAP,CAAkBC,KAAlB,CAAwB,GAAxB,EAA6B,CAA7B,CAAjB;AAEA,4BACI;AAAA,kCACI;AAAA,sBAAKJ,KAAK,CAACK;AAAX;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,sBAAKJ;AAAL;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA,sBAAKD,KAAK,CAACM;AAAX;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAA,sBAAKN,KAAK,CAACO;AAAX;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI;AAAA,sBAAKL;AAAL;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA,WAASF,KAAK,CAACQ,EAAf;AAAA;AAAA;AAAA;AAAA,gBADJ;AASH,OAbA;AADD;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADR;AA+BH,CA1CD;;GAAMhB,S;;KAAAA,S;AA4CN,eAAeA,SAAf","sourcesContent":["import { useEffect, useState } from 'react';\r\n\r\nconst MovieList = () => {\r\n    \r\n    const [movies, setMovies] = useState([])\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    useEffect(async () => {\r\n        const url = \"http://localhost:5000/movies\";\r\n        const res = await fetch(url);\r\n        setMovies(await res.json());\r\n    }, [])\r\n\r\n    return(\r\n            <table className=\"striped\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Nome</th>\r\n                        <th>Tipo</th>\r\n                        <th>Episódios</th>\r\n                        <th>Episódio atual</th>\r\n                        <th>Visto por Último</th>\r\n                    </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                {movies.map(movie => {\r\n                    let type = movie.type === 0 ? 'Série' : 'Filme';\r\n                    let formatDate = (movie.last_view).split('T', 1)\r\n\r\n                    return(\r\n                        <tr key={movie.id}>\r\n                            <td>{movie.name}</td>\r\n                            <td>{type}</td>\r\n                            <td>{movie.total_ep}</td>\r\n                            <td>{movie.atual_ep}</td>\r\n                            <td>{formatDate}</td>\r\n                        </tr>\r\n                    )\r\n                })}    \r\n                </tbody>\r\n            </table>\r\n\r\n    )\r\n}\r\n\r\nexport default MovieList;"]},"metadata":{},"sourceType":"module"}