{"ast":null,"code":"import _asyncToGenerator from\"C:/DIO/Dio_Controle_de_Series/front-end/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/DIO/Dio_Controle_de_Series/front-end/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"C:\\\\DIO\\\\Dio_Controle_de_Series\\\\front-end\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import{useEffect,useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var MovieList=function MovieList(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),movies=_useState2[0],setMovies=_useState2[1];// eslint-disable-next-line react-hooks/exhaustive-deps\nuseEffect(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var url,res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:url=\"http://localhost:5000/movies\";_context.next=3;return fetch(url);case 3:res=_context.sent;_context.t0=setMovies;_context.next=7;return res.json();case 7:_context.t1=_context.sent;(0,_context.t0)(_context.t1);case 9:case\"end\":return _context.stop();}}},_callee);})),[]);return/*#__PURE__*/_jsxs(\"table\",{className:\"striped\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Nome\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Tipo\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Epis\\xF3dios\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Epis\\xF3dio atual\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Visto por \\xDAltimo\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:movies.map(function(movie){var type=movie.type===0?'Série':'Filme';var formatDate=movie.last_view.split('T',1);return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:movie.name}),/*#__PURE__*/_jsx(\"td\",{children:type}),/*#__PURE__*/_jsx(\"td\",{children:movie.total_ep}),/*#__PURE__*/_jsx(\"td\",{children:movie.atual_ep}),/*#__PURE__*/_jsx(\"td\",{children:formatDate})]},movie.id);})})]});};export default MovieList;","map":{"version":3,"sources":["C:/DIO/Dio_Controle_de_Series/front-end/src/components/MovieList.jsx"],"names":["useEffect","useState","MovieList","movies","setMovies","url","fetch","res","json","map","movie","type","formatDate","last_view","split","name","total_ep","atual_ep","id"],"mappings":"kYAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,C,wFAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CAEpB,cAA4BD,QAAQ,CAAC,EAAD,CAApC,wCAAOE,MAAP,eAAeC,SAAf,eAEA;AACAJ,SAAS,sEAAC,+IACAK,GADA,CACM,8BADN,uBAEYC,CAAAA,KAAK,CAACD,GAAD,CAFjB,QAEAE,GAFA,2BAGNH,SAHM,uBAGUG,CAAAA,GAAG,CAACC,IAAJ,EAHV,qHAAD,GAIN,EAJM,CAAT,CAMA,mBACQ,eAAO,SAAS,CAAC,SAAjB,wBACI,oCACI,mCACI,4BADJ,cAEI,4BAFJ,cAGI,oCAHJ,cAII,yCAJJ,cAKI,2CALJ,GADJ,EADJ,cAWI,uBACCL,MAAM,CAACM,GAAP,CAAW,SAAAC,KAAK,CAAI,CACjB,GAAIC,CAAAA,IAAI,CAAGD,KAAK,CAACC,IAAN,GAAe,CAAf,CAAmB,OAAnB,CAA6B,OAAxC,CACA,GAAIC,CAAAA,UAAU,CAAIF,KAAK,CAACG,SAAP,CAAkBC,KAAlB,CAAwB,GAAxB,CAA6B,CAA7B,CAAjB,CAEA,mBACI,mCACI,oBAAKJ,KAAK,CAACK,IAAX,EADJ,cAEI,oBAAKJ,IAAL,EAFJ,cAGI,oBAAKD,KAAK,CAACM,QAAX,EAHJ,cAII,oBAAKN,KAAK,CAACO,QAAX,EAJJ,cAKI,oBAAKL,UAAL,EALJ,GAASF,KAAK,CAACQ,EAAf,CADJ,CASH,CAbA,CADD,EAXJ,GADR,CA+BH,CA1CD,CA4CA,cAAehB,CAAAA,SAAf","sourcesContent":["import { useEffect, useState } from 'react';\r\n\r\nconst MovieList = () => {\r\n    \r\n    const [movies, setMovies] = useState([])\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    useEffect(async () => {\r\n        const url = \"http://localhost:5000/movies\";\r\n        const res = await fetch(url);\r\n        setMovies(await res.json());\r\n    }, [])\r\n\r\n    return(\r\n            <table className=\"striped\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Nome</th>\r\n                        <th>Tipo</th>\r\n                        <th>Episódios</th>\r\n                        <th>Episódio atual</th>\r\n                        <th>Visto por Último</th>\r\n                    </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                {movies.map(movie => {\r\n                    let type = movie.type === 0 ? 'Série' : 'Filme';\r\n                    let formatDate = (movie.last_view).split('T', 1)\r\n\r\n                    return(\r\n                        <tr key={movie.id}>\r\n                            <td>{movie.name}</td>\r\n                            <td>{type}</td>\r\n                            <td>{movie.total_ep}</td>\r\n                            <td>{movie.atual_ep}</td>\r\n                            <td>{formatDate}</td>\r\n                        </tr>\r\n                    )\r\n                })}    \r\n                </tbody>\r\n            </table>\r\n\r\n    )\r\n}\r\n\r\nexport default MovieList;"]},"metadata":{},"sourceType":"module"}